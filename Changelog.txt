V0.1.0 (25.2.2023)
- first stub with an idea for the API

V0.1.1 (26.2.2023)
- renamed from univRTC to I2CRTC
- framework works with DS1307 example

V0.2.0 (28.2.2023)
- added new methods: enableXXHz, disableXXHz, alarm methods, and a getCapabilities method
- thrown out setAlarm with only minutes since not all RTCs support that, so only hour with minute is
  supported 
- added support for DS1337, DS3231, PCF8523
- added example testall, which can be used as a unit test for the different modules

V0.2.1 (28.2.2023)
- added support for PCF8563

V0.2.2 (2.3.2023)
- added support for RS5C372
- added a new "capability": strange register address: SREGADDR
  used for RS5C372, who wants to see the register address in
  the upper nibble

V0.2.3 (2.3.2023)
- checked with new PCF8563 module. This one works flawlessly! The Waveshare one is apparently broken. 
- added RV-8523 (well, it is simply a synonym for PCF8523)
- added getTemp method

V0.2.4 (3.3.2023)
- added otional parameter 'blocking' to getTime, which is false by default;
  if true, then we wait with the return until a fresh second has started.
- added RV-8803
- _wdaybase can now also be 2, which means that the day of the week is
  0-based, but it is now the bit position (for RV-8803)
- changed handling of _wdayfirst in setTime and getTime so that wday-encoding/decoding now
  happens just once
- added section of RTC capabilities in readme


V0.2.5 (3.3.2023)
- added RV-3032
- added 'mode' parameter to init, which can be used to select the battery switch-over mode

V0.3.0 (4.3.2023)
- added update of registers from RAM to EEPROM in RV-3032
- fixed problem with switch-over confusion
- added 3028
- added 3028U (using the Unix counter for timekeeping)
- added timeouts in all loops where we wait for a condition
- renamed library and classes to make them more readable
- new example: iterate
